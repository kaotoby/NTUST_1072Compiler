/*
 * Project 3
 * Author: B10630221 Chang-Ting Kao
 * Date: 2019/06/05
 */

#ifndef LEX_YY_H
#define LEX_YY_H

#ifndef __FLEX_LEXER_H
#include <FlexLexer.h>
#endif

#include "y.tab.hh"

namespace yy {

class FlexScanner : public yyFlexLexer
{
public:
    /** Create a new scanner object. The streams arg_yyin and arg_yyout default
     * to cin and cout, but that assignment is only made when initializing in
     * yylex(). */
    FlexScanner(std::istream* arg_yyin = 0, std::ostream* arg_yyout = 0,
                bool arg_verbose = true, bool arg_line = true) 
        : yyFlexLexer(arg_yyin, arg_yyout)
        {
            isVerbose = arg_verbose;
            showLine = arg_line;
        }

    /** This is the main lexing function. It is generated by flex according to
     * the macro declaration YY_DECL above. The generated bison parser then
     * calls this virtual function to fetch new tokens. */
    virtual int yylex(
        yy::BisonParser::semantic_type* yylval,
        yy::BisonParser::location_type* yylloc
	);
private:
    // Is using verbose output or not
    bool isVerbose;
    // Is printing lines or not
    bool showLine;
};

} // namespace yy

#endif // LEX_YY_H